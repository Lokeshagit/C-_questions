#include <bits/stdc++.h>
using namespace std;

char maxBalancedLength(int n, int k, vector<int>& arr){
    vector<long long> pre(n+2,0),suf(n+2,0);
    for(int i=1; i<=n; i++){
        pre[i]=pre[i-1]+arr[i-1];
    }
    for(int i=n; i>=1; i--){
        suf[i]=suf[i+1]+arr[i-1];
    }
    long long ans=(long long)0;
    
    for(long long i=1; i<=n; i++){
        for(long long j=i+1; j<=n; j++){
            for(long long k=i; k<j; k++){
                long long sum1=pre[k]-pre[i-1];
                long long sum2=suf[k+1]-suf[j+1];
                if(abs(sum2-sum1)<=k) ans=max(ans,j-i+1);
            }
        }
    }
    
    if(ans==0) return '0';
    else if(ans>=1 && ans<=5) return '1';
    else if(ans>=6 && ans<=15) return '2';
    else if(ans>=16 && ans<=50) return '3';
    else return '4';
}

int main()
{
    int n, k;
    cin >> n >> k;
    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];
    cout << maxBalancedLength(n, k, arr) << endl;

    return 0;
}

---------------

i/p:
6 3
4 2 6 1 3 5

o/p: 2
